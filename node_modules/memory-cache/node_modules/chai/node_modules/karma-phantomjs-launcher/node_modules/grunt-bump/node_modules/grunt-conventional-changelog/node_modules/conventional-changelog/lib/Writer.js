'use strict';
var dateFormat = require('dateformat');
var extend = require('lodash').assign;
var fs = require('fs');
var normalizeData = require('normalize-package-data');
var parseGithubUrl = require('github-url-from-git');
var partial = require('lodash').partial;
var template = require('lodash').template;
var url = require('url');

/*
 * NOTE:
 * We use lodash.template a lot in the not-the-most-efficient manner, for the sake
 * of clarity.
 * The difference between compiling a template once and in a function is negligible
 * for our library.
 */

var EMPTY_COMPONENT = '$$';

function parseNonGithubUrl(nonGithubUrl) {
  try {
    var idx = nonGithubUrl.indexOf('@');
    if (idx !== -1) {
      nonGithubUrl = nonGithubUrl.slice(idx + 1).replace(/:([^\d]+)/, '/$1');
    }
    nonGithubUrl = url.parse(nonGithubUrl);
    var protocol = nonGithubUrl.protocol === 'https:' ?
      'https:' : 'http:';
    return protocol + '//' + (nonGithubUrl.host || '') +
      nonGithubUrl.path.replace(/\.git$/, '');
  } catch (e) {}
}

var versionTemplate = function(version, subtitle) {
  return template('## <%= version %><%= subtitle ? (" " + subtitle) : "" %>')({
    version: version,
    subtitle: subtitle
  });
};
var patchVersionTemplate = function(version, subtitle) {
  return template('### <%= version %><%= subtitle ? (" " + subtitle) : "" %>')({
    version: version,
    subtitle: subtitle
  });
};

var issueTemplate = function(repository, issue) {
  var templateFn = repository ?
    template('[#<%= issue %>](<%= repositor