
;; Function composition
[f1 @@ f2]{x} = f1{f2{x}}

f{x} = x + 1.5
g{x} = x / 2
h{x} = 3 ** x

;; I have yet to provide hooks to define precedence rules
fgh = f @@ [g @@ h]

print 1..10 each i -> fgh{i}


;; Let's swap some variables!
inline-macro [<=>]{*, #data{a, b}}:
   ```
   let temp = ^a
   ^a = ^b
   ^b = temp
   ```

var x = 10
var y = 20
print {x, y}

x <=> y
print {x, y}

var temp = 60
temp <=> x
print {x, temp}


;; Besides their predefined priority, there's really nothing special
;; about the standard operators
print {
   10 + 4 / 8
   10 + 4 / 8 where
      a + b = a - b
      a / b = a * b
}
