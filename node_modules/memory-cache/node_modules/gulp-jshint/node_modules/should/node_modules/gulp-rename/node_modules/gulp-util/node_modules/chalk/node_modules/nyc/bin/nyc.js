#!/usr/bin/env node
var foreground = require('foreground-child')
var NYC = require('../')
var path = require('path')
var sw = require('spawn-wrap')

if (process.env.NYC_CWD) {
  ;(new NYC()).wrap()

  // make sure we can run coverage on
  // our own index.js, I like turtles.
  var name = require.resolve('../')
  delete require.cache[name]

  sw.runMain()
} else {
  var yargs = require('yargs')
    .usage('$0 [command] [options]\n\nrun your tests with the nyc bin to instrument them with coverage')
    .command('report', 'run coverage report for .nyc_output', function (yargs) {
      yargs
        .usage('$0 report [options]')
        .option('r', {
          alias: 'reporter',
          describe: 'coverage reporter(s) to use',
          default: 'text'
        })
        .help('h')
        .alias('h', 'help')
        .example('$0 report --reporter=lcov', 'output an HTML lcov report to ./coverage')
    })
    .command('check-coverage', 'check whether coverage is within thresholds provided', function (yargs) {
      yargs
        .usage('$0 check-coverage [options]')
        .option('b', {
          alias: 'branches',
          default: 0,
          description: 'what % of branches must be covered?'
        })
        .option('f', {
          alias: 'functions',
          default: 0,
          description: 'what % of functions must be covered?'
        })
        .option('l', {
          alias: 'lines',
          default: 90,
          description: 'what % of lines must be covered?'
        })
        .option('s', {
          alias: 'statements',
          default: 0,
          description: 'what % of statements must be covered?'
        })
        .help('h')
        .alias('h', 'help')
        .example('$0 check-coverage --lines 95', "check whether the JSON in nyc's output folder meets the thresholds provided")
    })
    .option('r', {
      alias: 'reporter',
      describe: 'coverage reporter(s) to use',
      default: 'text'
    })
    .option('s', {
      alias: 'silent',
      default: false,
      type: 'boo