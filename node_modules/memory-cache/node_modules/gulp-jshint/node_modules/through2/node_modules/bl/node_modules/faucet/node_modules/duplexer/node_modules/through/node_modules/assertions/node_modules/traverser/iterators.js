//iterators
//var log = require('logger')

/*
~~~~~~~~~~~~~~~~~~~~~~~~
Sync


*/
/*
  i've discovered that js has some querks about properties being iteratred on
  for example: for (i in obj) will include prototype properties,
          but Object.keys(obj) will not.
          
          for greatest flex, pass in a custom function to gen prop list.

          when you are say, comparing objects, the correctness of iteration is essential.
*/

exports.sync = {
  each: function (object,func){
    for( key in object){
      var value = object[key]
      func(value,key,object)
    }
  },
  find: function (object,func){
    for( key in object){
      var value = object[key]
      var r = func(value,key,object)
      if(r){
        return value
     }
    }
  },
  map: function (object,func){
    var m = []
    for( key in object){
      var value = object[key]
      m.push(func(value,key,object))
    }
    return m
  },
  copy: function (object,func){
    if('object' !== typeof object || object === null)
      ret